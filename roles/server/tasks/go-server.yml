---
- name: yum install go-server
  become: yes
  yum: pkg=go-server-{{ GOCD_GO_VERSION }} state=present
  notify:
  - restart go-server
  when: ansible_pkg_mgr=='yum'

- name: apt install go-server
  become: yes
  apt: pkg=go-server={{ GOCD_GO_VERSION }} state=present force=yes
  when: ansible_pkg_mgr=='apt'

- name: flag that we're configuration a Go server
  set_fact: tmp_gocd_onserver=True

- name: replace /etc/default/go-server from package
  template: "src=go-server-defaults dest=/etc/default/go-server mode=0644 group={{ GOCD_GROUP }} owner={{ GOCD_USER }}"
  become: yes
  notify:
  - restart go-server

- name: start go-server
  become: yes
  service: name=go-server state=started
  notify:
     - ensure go-server running

- name: check if firewalld is installed
  become: yes
  command: which firewalld
  ignore_errors: true
  register: firewalld
  changed_when: false

- name: check if firewalld service is running
  command: firewall-cmd --state
  become: yes
  when: firewalld|success
  changed_when: false
  register: firewalld_svc
  ignore_errors: true

- name: enable Go HTTP traffic through firewalld
  become: yes
  firewalld: port={{ GOCD_SERVER_PORT }}/tcp permanent=true state=enabled
  when: firewalld|success and firewalld_svc.stdout=='running'
  notify:
    - restart firewalld

- name: enable Go HTTPS traffic through firewalld
  become: yes
  firewalld: port=8154/tcp permanent=true state=enabled
  when: firewalld|success and firewalld_svc.stdout=='running'
  notify:
    - restart firewalld

- name: check if UFW is available
  command: which ufw
  ignore_errors: true
  register: ufw
  changed_when: false

- name: enable Go HTTP traffic through ufw
  become: yes
  ufw: rule=allow port={{ GOCD_SERVER_PORT }} proto=tcp
  when: ufw|success

- name: enable Go HTTPS traffic through ufw
  become: yes
  ufw: rule=allow port=8154 proto=tcp
  when: ufw|success

- name: create script for automated Go configuration backups to Git
  template: backup=no dest=/usr/share/go-server/ mode=0755 src=backup_to_git.sh
  become: yes
